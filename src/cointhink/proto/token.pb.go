// Code generated by protoc-gen-go.
// source: proto/token.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Token struct {
	Id        string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	CreatedAt string `protobuf:"bytes,2,opt,name=CreatedAt" json:"CreatedAt,omitempty"`
	Token     string `protobuf:"bytes,3,opt,name=Token" json:"Token,omitempty"`
	AccountId string `protobuf:"bytes,4,opt,name=AccountId" json:"AccountId,omitempty"`
	AlgorunId string `protobuf:"bytes,5,opt,name=AlgorunId" json:"AlgorunId,omitempty"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto1.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

func (m *Token) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Token) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Token) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Token) GetAlgorunId() string {
	if m != nil {
		return m.AlgorunId
	}
	return ""
}

func init() {
	proto1.RegisterType((*Token)(nil), "proto.Token")
}

func init() { proto1.RegisterFile("proto/token.proto", fileDescriptor28) }

var fileDescriptor28 = []byte{
	// 135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0xc9, 0xcf, 0x4e, 0xcd, 0xd3, 0x03, 0xb3, 0x85, 0x58, 0xc1, 0x94, 0x52, 0x3b,
	0x23, 0x17, 0x6b, 0x08, 0x48, 0x58, 0x88, 0x8f, 0x8b, 0xc9, 0x33, 0x45, 0x82, 0x51, 0x81, 0x51,
	0x83, 0x33, 0x88, 0xc9, 0x33, 0x45, 0x48, 0x86, 0x8b, 0xd3, 0xb9, 0x28, 0x35, 0xb1, 0x24, 0x35,
	0xc5, 0xb1, 0x44, 0x82, 0x09, 0x2c, 0x8c, 0x10, 0x10, 0x12, 0x81, 0x6a, 0x93, 0x60, 0x06, 0xcb,
	0x40, 0xcd, 0x90, 0xe1, 0xe2, 0x74, 0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0xf1, 0x4c, 0x91, 0x60,
	0x81, 0xe8, 0x81, 0x0b, 0x80, 0x65, 0x73, 0xd2, 0xf3, 0x8b, 0x4a, 0xf3, 0x3c, 0x53, 0x24, 0x58,
	0xa1, 0xb2, 0x30, 0x81, 0x24, 0x36, 0xb0, 0x83, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfb,
	0x66, 0xb2, 0x98, 0xac, 0x00, 0x00, 0x00,
}
