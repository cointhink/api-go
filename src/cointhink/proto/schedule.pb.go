// Code generated by protoc-gen-go.
// source: proto/schedule.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Schedule struct {
	Id           string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	AccountId    string `protobuf:"bytes,2,opt,name=AccountId" json:"AccountId,omitempty"`
	AlgorithmId  string `protobuf:"bytes,3,opt,name=AlgorithmId" json:"AlgorithmId,omitempty"`
	Status       string `protobuf:"bytes,4,opt,name=Status" json:"Status,omitempty"`
	InitialState string `protobuf:"bytes,5,opt,name=InitialState" json:"InitialState,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto1.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Schedule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Schedule) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Schedule) GetAlgorithmId() string {
	if m != nil {
		return m.AlgorithmId
	}
	return ""
}

func (m *Schedule) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Schedule) GetInitialState() string {
	if m != nil {
		return m.InitialState
	}
	return ""
}

func init() {
	proto1.RegisterType((*Schedule)(nil), "proto.Schedule")
}

func init() { proto1.RegisterFile("proto/schedule.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0xce, 0x48, 0x4d, 0x29, 0xcd, 0x49, 0xd5, 0x03, 0x73, 0x85, 0x58, 0xc1,
	0x94, 0xd2, 0x34, 0x46, 0x2e, 0x8e, 0x60, 0xa8, 0x8c, 0x10, 0x1f, 0x17, 0x93, 0x67, 0x8a, 0x04,
	0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x93, 0x67, 0x8a, 0x90, 0x0c, 0x17, 0xa7, 0x63, 0x72, 0x72,
	0x7e, 0x69, 0x5e, 0x89, 0x67, 0x8a, 0x04, 0x13, 0x58, 0x18, 0x21, 0x20, 0xa4, 0xc0, 0xc5, 0xed,
	0x98, 0x93, 0x9e, 0x5f, 0x94, 0x59, 0x92, 0x91, 0xeb, 0x99, 0x22, 0xc1, 0x0c, 0x96, 0x47, 0x16,
	0x12, 0x12, 0xe3, 0x62, 0x0b, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0x96, 0x60, 0x01, 0x4b, 0x42, 0x79,
	0x42, 0x4a, 0x5c, 0x3c, 0x9e, 0x79, 0x99, 0x25, 0x99, 0x89, 0x39, 0x20, 0x81, 0x54, 0x09, 0x56,
	0xb0, 0x2c, 0x8a, 0x58, 0x12, 0x1b, 0xd8, 0x7d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd8,
	0xf8, 0x38, 0x71, 0xbe, 0x00, 0x00, 0x00,
}
