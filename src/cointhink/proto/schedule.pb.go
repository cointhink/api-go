// Code generated by protoc-gen-go.
// source: proto/schedule.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Schedule_States int32

const (
	Schedule_unknown  Schedule_States = 0
	Schedule_disabled Schedule_States = 1
	Schedule_enabled  Schedule_States = 2
	Schedule_deleted  Schedule_States = 3
)

var Schedule_States_name = map[int32]string{
	0: "unknown",
	1: "disabled",
	2: "enabled",
	3: "deleted",
}
var Schedule_States_value = map[string]int32{
	"unknown":  0,
	"disabled": 1,
	"enabled":  2,
	"deleted":  3,
}

func (x Schedule_States) String() string {
	return proto1.EnumName(Schedule_States_name, int32(x))
}
func (Schedule_States) EnumDescriptor() ([]byte, []int) { return fileDescriptor23, []int{0, 0} }

type Schedule struct {
	Id           string          `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	AccountId    string          `protobuf:"bytes,2,opt,name=AccountId" json:"AccountId,omitempty"`
	AlgorithmId  string          `protobuf:"bytes,3,opt,name=AlgorithmId" json:"AlgorithmId,omitempty"`
	Status       Schedule_States `protobuf:"varint,4,opt,name=Status,enum=proto.Schedule_States" json:"Status,omitempty"`
	InitialState string          `protobuf:"bytes,5,opt,name=InitialState" json:"InitialState,omitempty"`
	EnabledUntil string          `protobuf:"bytes,6,opt,name=EnabledUntil" json:"EnabledUntil,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto1.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{0} }

func (m *Schedule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Schedule) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Schedule) GetAlgorithmId() string {
	if m != nil {
		return m.AlgorithmId
	}
	return ""
}

func (m *Schedule) GetStatus() Schedule_States {
	if m != nil {
		return m.Status
	}
	return Schedule_unknown
}

func (m *Schedule) GetInitialState() string {
	if m != nil {
		return m.InitialState
	}
	return ""
}

func (m *Schedule) GetEnabledUntil() string {
	if m != nil {
		return m.EnabledUntil
	}
	return ""
}

func init() {
	proto1.RegisterType((*Schedule)(nil), "proto.Schedule")
	proto1.RegisterEnum("proto.Schedule_States", Schedule_States_name, Schedule_States_value)
}

func init() { proto1.RegisterFile("proto/schedule.proto", fileDescriptor23) }

var fileDescriptor23 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8e, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x89, 0x4b, 0x43, 0x7b, 0xad, 0xaa, 0xc8, 0x42, 0xc8, 0x03, 0x43, 0x94, 0xa9, 0x53,
	0x90, 0x60, 0x66, 0xe8, 0xc0, 0xe0, 0xb5, 0x15, 0x0f, 0x90, 0xe6, 0x4e, 0xd4, 0xc2, 0xd8, 0xa8,
	0xbe, 0x88, 0xe7, 0xe0, 0x8d, 0x51, 0xce, 0x45, 0x84, 0xc9, 0xfa, 0xbf, 0xef, 0xb7, 0x7f, 0xc3,
	0xed, 0xe7, 0x39, 0x72, 0x7c, 0x48, 0xfd, 0x89, 0x70, 0xf0, 0xd4, 0x4a, 0xd4, 0x73, 0x39, 0x9a,
	0x6f, 0x05, 0x8b, 0xc3, 0xc5, 0xe8, 0x0d, 0x28, 0x8b, 0xa6, 0xa8, 0x8b, 0xed, 0x72, 0xaf, 0x2c,
	0xea, 0x7b, 0x58, 0xee, 0xfa, 0x3e, 0x0e, 0x81, 0x2d, 0x1a, 0x25, 0xf8, 0x0f, 0xe8, 0x1a, 0x56,
	0x3b, 0xff, 0x16, 0xcf, 0x8e, 0x4f, 0x1f, 0x16, 0xcd, 0x4c, 0xfc, 0x14, 0xe9, 0x16, 0xca, 0x03,
	0x77, 0x3c, 0x24, 0x73, 0x5d, 0x17, 0xdb, 0xcd, 0xe3, 0x5d, 0xde, 0x6e, 0x7f, 0x07, 0xdb, 0xd1,
	0x52, 0xda, 0x5f, 0x5a, 0xba, 0x81, 0xb5, 0x0d, 0x8e, 0x5d, 0xe7, 0x45, 0x98, 0xb9, 0x3c, 0xf9,
	0x8f, 0x8d, 0x9d, 0x97, 0xd0, 0x1d, 0x3d, 0xe1, 0x6b, 0x60, 0xe7, 0x4d, 0x99, 0x3b, 0x53, 0xd6,
	0x3c, 0xe7, 0x5d, 0x4a, 0x7a, 0x05, 0x37, 0x43, 0x78, 0x0f, 0xf1, 0x2b, 0x54, 0x57, 0x7a, 0x0d,
	0x0b, 0x74, 0x49, 0x7a, 0x55, 0x31, 0x2a, 0xca, 0x97, 0x2a, 0x35, 0x06, 0x24, 0x4f, 0x4c, 0x58,
	0xcd, 0x8e, 0xa5, 0xfc, 0xf2, 0xe9, 0x27, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xa1, 0xb8, 0xce, 0x39,
	0x01, 0x00, 0x00,
}
