// Code generated by protoc-gen-go.
// source: proto/schedule.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Schedule_States int32

const (
	Schedule_unknown  Schedule_States = 0
	Schedule_disabled Schedule_States = 1
	Schedule_enabled  Schedule_States = 2
	Schedule_deleted  Schedule_States = 3
)

var Schedule_States_name = map[int32]string{
	0: "unknown",
	1: "disabled",
	2: "enabled",
	3: "deleted",
}
var Schedule_States_value = map[string]int32{
	"unknown":  0,
	"disabled": 1,
	"enabled":  2,
	"deleted":  3,
}

func (x Schedule_States) String() string {
	return proto1.EnumName(Schedule_States_name, int32(x))
}
func (Schedule_States) EnumDescriptor() ([]byte, []int) { return fileDescriptor24, []int{0, 0} }

type Schedule_Executors int32

const (
	Schedule_container Schedule_Executors = 0
	Schedule_lambda    Schedule_Executors = 1
)

var Schedule_Executors_name = map[int32]string{
	0: "container",
	1: "lambda",
}
var Schedule_Executors_value = map[string]int32{
	"container": 0,
	"lambda":    1,
}

func (x Schedule_Executors) String() string {
	return proto1.EnumName(Schedule_Executors_name, int32(x))
}
func (Schedule_Executors) EnumDescriptor() ([]byte, []int) { return fileDescriptor24, []int{0, 1} }

type Schedule struct {
	Id           string             `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	AccountId    string             `protobuf:"bytes,2,opt,name=AccountId" json:"AccountId,omitempty"`
	AlgorithmId  string             `protobuf:"bytes,3,opt,name=AlgorithmId" json:"AlgorithmId,omitempty"`
	Status       Schedule_States    `protobuf:"varint,4,opt,name=Status,enum=proto.Schedule_States" json:"Status,omitempty"`
	InitialState string             `protobuf:"bytes,5,opt,name=InitialState" json:"InitialState,omitempty"`
	EnabledUntil string             `protobuf:"bytes,6,opt,name=EnabledUntil" json:"EnabledUntil,omitempty"`
	Executor     Schedule_Executors `protobuf:"varint,7,opt,name=Executor,enum=proto.Schedule_Executors" json:"Executor,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto1.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{0} }

func (m *Schedule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Schedule) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Schedule) GetAlgorithmId() string {
	if m != nil {
		return m.AlgorithmId
	}
	return ""
}

func (m *Schedule) GetStatus() Schedule_States {
	if m != nil {
		return m.Status
	}
	return Schedule_unknown
}

func (m *Schedule) GetInitialState() string {
	if m != nil {
		return m.InitialState
	}
	return ""
}

func (m *Schedule) GetEnabledUntil() string {
	if m != nil {
		return m.EnabledUntil
	}
	return ""
}

func (m *Schedule) GetExecutor() Schedule_Executors {
	if m != nil {
		return m.Executor
	}
	return Schedule_container
}

func init() {
	proto1.RegisterType((*Schedule)(nil), "proto.Schedule")
	proto1.RegisterEnum("proto.Schedule_States", Schedule_States_name, Schedule_States_value)
	proto1.RegisterEnum("proto.Schedule_Executors", Schedule_Executors_name, Schedule_Executors_value)
}

func init() { proto1.RegisterFile("proto/schedule.proto", fileDescriptor24) }

var fileDescriptor24 = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8e, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0x9b, 0xf4, 0x6f, 0x9a, 0xdc, 0xf6, 0xaf, 0xac, 0x2b, 0x84, 0x8c, 0xc4, 0x10, 0x65,
	0x40, 0x9d, 0x82, 0x04, 0x62, 0x64, 0xe8, 0xd0, 0x21, 0x6b, 0x2a, 0x1e, 0xc0, 0x89, 0xaf, 0xa8,
	0x85, 0x6b, 0xa3, 0xd8, 0x11, 0x3c, 0x36, 0x8f, 0x80, 0xe2, 0xb4, 0xa5, 0x30, 0x59, 0x3e, 0xdf,
	0xd1, 0xf9, 0x2e, 0x5c, 0xbd, 0x77, 0xd6, 0xdb, 0x7b, 0xd7, 0xee, 0x49, 0xf6, 0x9a, 0xca, 0xf0,
	0xc5, 0x59, 0x78, 0x8a, 0xaf, 0x18, 0xd2, 0xdd, 0x91, 0xe0, 0x0a, 0xe2, 0x4a, 0xf2, 0x28, 0x8f,
	0xd6, 0x59, 0x1d, 0x57, 0x12, 0x6f, 0x21, 0xdb, 0xb4, 0xad, 0xed, 0x8d, 0xaf, 0x24, 0x8f, 0x43,
	0xfc, 0x13, 0x60, 0x0e, 0x8b, 0x8d, 0x7e, 0xb5, 0x9d, 0xf2, 0xfb, 0x43, 0x25, 0xf9, 0x34, 0xf0,
	0xcb, 0x08, 0x4b, 0x48, 0x76, 0x5e, 0xf8, 0xde, 0xf1, 0x7f, 0x79, 0xb4, 0x5e, 0x3d, 0x5c, 0x8f,
	0xee, 0xf2, 0x24, 0x2c, 0x07, 0x4a, 0xae, 0x3e, 0xb6, 0xb0, 0x80, 0x65, 0x65, 0x94, 0x57, 0x42,
	0x07, 0xc0, 0x67, 0x61, 0xf2, 0x57, 0x36, 0x74, 0xb6, 0x46, 0x34, 0x9a, 0xe4, 0x8b, 0xf1, 0x4a,
	0xf3, 0x64, 0xec, 0x5c, 0x66, 0xf8, 0x04, 0xe9, 0xf6, 0x93, 0xda, 0xde, 0xdb, 0x8e, 0xcf, 0x83,
	0xf9, 0xe6, 0xaf, 0xf9, 0xc4, 0x5d, 0x7d, 0xae, 0x16, 0xcf, 0xe3, 0xb9, 0xe4, 0x70, 0x01, 0xf3,
	0xde, 0xbc, 0x19, 0xfb, 0x61, 0xd8, 0x04, 0x97, 0x90, 0x4a, 0xe5, 0xc2, 0x3c, 0x8b, 0x06, 0x44,
	0xa3, 0x8b, 0xc5, 0xc3, 0x47, 0x92, 0x26, 0x4f, 0x92, 0x4d, 0x8b, 0x3b, 0xc8, 0xce, 0xab, 0xf8,
	0x1f, 0xb2, 0xd6, 0x1a, 0x2f, 0x94, 0xa1, 0x8e, 0x4d, 0x10, 0x20, 0xd1, 0xe2, 0xd0, 0x48, 0xc1,
	0xa2, 0x26, 0x09, 0xa7, 0x3c, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb5, 0xdd, 0x38, 0x84, 0x98,
	0x01, 0x00, 0x00,
}
