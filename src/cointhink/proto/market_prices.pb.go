// Code generated by protoc-gen-go.
// source: proto/market_prices.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MarketPrices struct {
	Exchange   string `protobuf:"bytes,1,opt,name=Exchange" json:"Exchange,omitempty"`
	Market     string `protobuf:"bytes,2,opt,name=Market" json:"Market,omitempty"`
	Amount     string `protobuf:"bytes,3,opt,name=Amount" json:"Amount,omitempty"`
	Currency   string `protobuf:"bytes,4,opt,name=Currency" json:"Currency,omitempty"`
	ReceivedAt string `protobuf:"bytes,5,opt,name=ReceivedAt" json:"ReceivedAt,omitempty"`
}

func (m *MarketPrices) Reset()                    { *m = MarketPrices{} }
func (m *MarketPrices) String() string            { return proto1.CompactTextString(m) }
func (*MarketPrices) ProtoMessage()               {}
func (*MarketPrices) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

func (m *MarketPrices) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *MarketPrices) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *MarketPrices) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MarketPrices) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *MarketPrices) GetReceivedAt() string {
	if m != nil {
		return m.ReceivedAt
	}
	return ""
}

func init() {
	proto1.RegisterType((*MarketPrices)(nil), "proto.MarketPrices")
}

func init() { proto1.RegisterFile("proto/market_prices.proto", fileDescriptor16) }

var fileDescriptor16 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x4d, 0x2c, 0xca, 0x4e, 0x2d, 0x89, 0x2f, 0x28, 0xca, 0x4c, 0x4e, 0x2d, 0xd6,
	0x03, 0x8b, 0x09, 0xb1, 0x82, 0x29, 0xa5, 0x69, 0x8c, 0x5c, 0x3c, 0xbe, 0x60, 0xe9, 0x00, 0xb0,
	0xac, 0x90, 0x14, 0x17, 0x87, 0x6b, 0x45, 0x72, 0x46, 0x62, 0x5e, 0x7a, 0xaa, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x9c, 0x2f, 0x24, 0xc6, 0xc5, 0x06, 0x51, 0x2b, 0xc1, 0x04, 0x96, 0x81,
	0xf2, 0x40, 0xe2, 0x8e, 0xb9, 0xf9, 0xa5, 0x79, 0x25, 0x12, 0xcc, 0x10, 0x71, 0x08, 0x0f, 0x64,
	0x96, 0x73, 0x69, 0x51, 0x51, 0x6a, 0x5e, 0x72, 0xa5, 0x04, 0x0b, 0xc4, 0x2c, 0x18, 0x5f, 0x48,
	0x8e, 0x8b, 0x2b, 0x28, 0x35, 0x39, 0x35, 0xb3, 0x2c, 0x35, 0xc5, 0xb1, 0x44, 0x82, 0x15, 0x2c,
	0x8b, 0x24, 0x92, 0xc4, 0x06, 0x76, 0x9f, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x86, 0x92,
	0x37, 0xc3, 0x00, 0x00, 0x00,
}
